# -*- coding: utf-8 -*-
"""Linear_Classification.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QM5LA-jZRjOdLNXynWChMIEYbEnClmaS
"""

import tensorflow as tf

from sklearn.datasets import load_breast_cancer

data = load_breast_cancer()

type(data)

data.keys()

data.data.shape

data.target

from sklearn.model_selection import train_test_split

X_train,X_test,y_train,y_test = train_test_split(data.data,data.target,test_size=0.33)
N,D = X_train.shape

from sklearn.preprocessing import StandardScaler
scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

# model = tf.keras.models.Sequential([
#                                     tf.keras.layers.Input(shape=D),
#                                     tf.keras.layers.Dense(1,activation='sigmoid')
# ])

model = tf.keras.models.Sequential()
model.add(tf.keras.layers.Dense(1,input_shape=(D,),activation='sigmoid'))

model.compile(optimizer='adam',loss='binary_crossentropy',metrics=['accuracy'])

r = model.fit(X_train,y_train,validation_data=(X_test,y_test),epochs=100)

print("Train score: ",model.evaluate(X_train,y_train))
print("Test socre:",model.evaluate(X_test,y_test))

import matplotlib.pyplot as plt

plt.plot(r.history['loss'],label='loss')
plt.plot(r.history['val_loss'],label='val loss')
plt.legend()

# plot accuracy per iter
plt.plot(r.history['accuracy'],label='train accuracy')
plt.plot(r.history['val_accuracy'],label='test accuracy')
plt.legend()

